{"version":3,"file":"static/js/316.b5d2341f.chunk.js","mappings":"qPACA,EAA6B,8BAA7B,EAAwE,8BAAxE,EAAwH,mCAAxH,EAAmL,yC,SCsCnL,EAjCkB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACTC,EAA8ED,EAA9EC,YAAaC,EAAiEF,EAAjEE,eAAgBC,EAAiDH,EAAjDG,OAAQC,EAAyCJ,EAAzCI,aAAcC,EAA2BL,EAA3BK,SAAUC,EAAiBN,EAAjBM,aAIrE,OAAO,gCACH,iBAAKC,UAAWC,EAAhB,WACI,gBAAKC,IAAG,UATR,mCASQ,OAAWR,GAAeS,IAAI,kBACtC,iBAAKH,UAAWC,EAAhB,WAAgC,0BAAKN,EAAL,KAAwBI,EAAaK,MAAM,KAAK,GAAhD,QAC5B,wCAAiBP,MACzB,sCACI,uBAAKC,KACT,oCACI,uBAAIF,EAAOS,KAAI,SAAAC,GAEX,MAAM,GAAN,OAAUA,EAAMC,KAAhB,IACH,aAEL,iBAAKP,UAAWC,EAAhB,WAAqC,cAAGD,UAAWC,EAAd,qCACjC,2BACA,yBACZ,SAAC,KAAD,CAAMO,GAAG,OAAT,qBAEgB,yBAChB,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGY,SAAC,EAAAC,SAAD,CAAUC,UAAU,yCAApB,UACZ,SAAC,KAAD,WAIC,E,SCDD,EA/BqB,WAAO,IAAD,IAEvB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOlB,EAAP,KAAcmB,EAAd,KAEMC,GAAOC,EAAAA,EAAAA,MAAPD,GAIAE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UACvCC,GAAeC,EAAAA,EAAAA,QAAOL,GAa5B,OAZAM,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,WAAOT,GAAP,kFAETU,EAAAA,EAAAA,IAAaV,GAAIW,MAAK,SAAAC,GAAQ,OAAIb,EAASa,EAASC,KAAtB,IAFrB,2CAAH,sDAOhBJ,EAAWT,EAEd,GAAE,CAACA,KAGA,6BACI,SAAC,KAAD,CAASL,GAAIW,EAAaQ,QAA1B,sBACAlC,IAAS,SAAC,EAAD,CAAWA,MAAOA,MAItC,C","sources":["webpack://react-homework-template/./src/components/MovieInfo/MovieInfo.module.css?df02","components/MovieInfo/MovieInfo.jsx","Pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_card\":\"MovieInfo_movie_card__VB5F+\",\"movie_info\":\"MovieInfo_movie_info__DetD9\",\"additional_info\":\"MovieInfo_additional_info__1WuCf\",\"additional_info_title\":\"MovieInfo_additional_info_title__kluqO\"};","import { Link, Outlet } from 'react-router-dom';\nimport css from './MovieInfo.module.css'\n\nimport { Suspense } from 'react';\nconst URL = 'https://image.tmdb.org/t/p/w500'\n\nconst MovieInfo = ({ movie }) => {\n    const { poster_path, original_title, genres, vote_average, overview, release_date } = movie\n    \n    // const normalizedReleaseDate = release_date.split('-')[0];\n    \n    return <section>\n        <div className={css.movie_card}>\n            <img src={`${URL}${poster_path}`} alt=\"movie poster\" />\n            <div className={css.movie_info}><h2>{original_title} ({ release_date.split('-')[0]})</h2>\n                <p>user score: { vote_average}</p>\n        <h3>Overview</h3>\n            <p>{ overview}</p>\n        <h3>Ganres</h3>\n            <p>{genres.map(genre => {\n\n                return `${genre.name} `\n            })}</p></div>\n        </div>\n        <div className={css.additional_info}><p className={css.additional_info_title}>Additional information</p>\n            <ul>\n            <li>\n<Link to='cast'>Cast</Link>\n                </li>\n                <li>\n<Link to='reviews'>Reviews</Link>\n            </li>\n            </ul>\n            <Suspense fallback={<div> Loading...</div>}>\n<Outlet/>\n            </Suspense>\n        </div>\n</section>\n}\nexport default MovieInfo;\n","import { useParams, NavLink, useLocation } from \"react-router-dom\"\n\nimport { useRef } from \"react\"\nimport MovieInfo from \"components/MovieInfo/MovieInfo\"\nimport { useEffect, useState } from \"react\"\nimport { getMovieById } from \"Api/Api\"\nconst MovieDetails = () => {\n    \n    const [movie, setMovie] = useState(null)\n\n    let { id } = useParams()\n\n\n    const location = useLocation()\n    const prevLocation = location.state?.from ?? '/movies';\n    const prevPageLink = useRef(prevLocation)\n    useEffect(() => {\n        const fetchMovie = async (id) => {\n\n            await getMovieById(id).then(response => setMovie(response.data) )\n\n            \n        }\n        \n        fetchMovie(id)\n        \n    }, [id])\n    \n    return (\n        <main>\n            <NavLink to={prevPageLink.current}> Go back</NavLink>\n           {movie && <MovieInfo movie={movie} />}\n            \n    </main>\n)\n}\n\nexport default MovieDetails"],"names":["movie","poster_path","original_title","genres","vote_average","overview","release_date","className","css","src","alt","split","map","genre","name","to","Suspense","fallback","useState","setMovie","id","useParams","prevLocation","useLocation","state","from","prevPageLink","useRef","useEffect","fetchMovie","getMovieById","then","response","data","current"],"sourceRoot":""}
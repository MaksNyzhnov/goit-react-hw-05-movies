{"version":3,"file":"static/js/931.9fe8e686.chunk.js","mappings":"gRAgDA,EAzCoB,WAChB,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAYF,EAAYG,IAAI,SAClC,GAA4BP,EAAAA,EAAAA,UAAS,IAArC,eAAOQ,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,WAAOC,GAAP,oEACXA,EADW,kEAIVC,EAAAA,EAAAA,IAAeD,GAAME,MAAK,SAAAC,GAAQ,OAAKR,EAAUQ,EAASC,KAAKC,QAA7B,IAJxB,2CAAH,sDAQjBN,EAAYP,EAEf,GAAE,CAACA,IAYJ,OACI,6BACI,kBAAMc,SATG,SAAAC,GACbA,EAAMC,iBACN,IAAMC,EAA4D,KAA7CF,EAAMG,OAAOC,SAASC,MAAMC,MAAMC,OAAgB,CAAEC,MAAOR,EAAMG,OAAOC,SAASC,MAAMC,MAAMC,QAAU,CAAC,EAC7HvB,EAAekB,EAElB,EAIO,WACI,kBAAOO,KAAK,OAAOhB,KAAK,QAAQa,MAAQ1B,EAAY8B,SAb1C,SAACV,GACnBnB,EAAcmB,EAAMG,OAAOG,MAC9B,KAYW,mBAAQG,KAAK,SAAb,uBAEe,IAAlBtB,EAAOwB,SAAgB,SAACC,EAAA,EAAD,CAAWzB,OAAQA,EAAQE,SAAUA,MAIxE,C","sources":["Pages/MovieSearch/MovieSearch.jsx"],"sourcesContent":["\nimport { useState, useEffect } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport './MovieSearch.module.css'\nimport MovieList from \"components/MovieList/MovieList\";\nimport { getMovieByName } from \"Api/Api\";\n\nconst MovieSearch = () => {\n    const [inputValue, setInputValue] = useState('');\n    const [searchQuery, setSearchQuery] = useSearchParams();\n    const movieName = searchQuery.get('query')\n    const [movies, setMovies] = useState([]);\n    const location = useLocation()\n    useEffect(() => {\n        const fetchMovies = async (name) => {\n            if (!name) {\n                return\n                }\n            await getMovieByName(name).then(response =>  setMovies(response.data.results))\n\n            \n        }\n        fetchMovies(movieName)\n        \n    }, [movieName])\n\n    const onInputChange = (event) => {\n        setInputValue(event.target.value);\n    }\n    const onSearch = event => {\n        event.preventDefault();\n        const searchParams = event.target.elements.movie.value.trim() !== '' ? { query: event.target.elements.movie.value.trim()} : {};\n        setSearchQuery(searchParams)\n\n    }\n\n    return (\n        <main>\n            <form onSubmit={onSearch}>\n                <input type=\"text\" name=\"movie\" value={ inputValue} onChange={onInputChange} />\n                <button type=\"sybmit\">Search</button>\n            </form>\n            {movies.length !== 0 && <MovieList movies={movies} location={location} />}\n            \n        </main>\n    )\n}\n\nexport default MovieSearch;"],"names":["useState","inputValue","setInputValue","useSearchParams","searchQuery","setSearchQuery","movieName","get","movies","setMovies","location","useLocation","useEffect","fetchMovies","name","getMovieByName","then","response","data","results","onSubmit","event","preventDefault","searchParams","target","elements","movie","value","trim","query","type","onChange","length","MovieList"],"sourceRoot":""}